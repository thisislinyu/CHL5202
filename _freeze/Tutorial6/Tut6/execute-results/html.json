{
  "hash": "a57c07a82d7da932f20e6f06e4ad7c11",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Survival Analysis 1\"\nauthor: \"Lin Yu\"\ndate: \"2025-03-03\"\nformat: \n  html: \n    toc: true\n    embed-resources: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(DT)\nlibrary(here)\n```\n:::\n\n\n\n\n\n\n\n\n## Recap of Tutorial 5\n\nOne question left from last week:\n\nSuppose you fit a generalized linear model with X as covariate. You are asked to calculate the effect size of X on the outcome Y comparing X=3 to X=2, and the confidence interval of the effect size:\n\n$$\ng[E(Y\\mid X) ] = \\beta_1 + \\beta_2 \\mathbf{1}{\\{X=2\\}}+\\beta_3 \\mathbf{1}{\\{X=3\\}}\n$$\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## More about confidence interval \nset.seed(1017)\nx <- sample(1:3, size=1000, replace=TRUE, prob=c(0.2, 0.2, 0.6))\nhead(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3 3 2 1 1 2\n```\n\n\n:::\n\n```{.r .cell-code}\ndat_x <- data.frame(x = x %>% as.factor())\n\ndesign_matrix <- model.matrix(~., data = dat_x)\n\nhead(design_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  (Intercept) x2 x3\n1           1  0  1\n2           1  0  1\n3           1  1  0\n4           1  0  0\n5           1  0  0\n6           1  1  0\n```\n\n\n:::\n\n```{.r .cell-code}\ntrue_coef <- c(0.5,1,2)\ntrue_Y_linear <-   design_matrix %*% true_coef\n\n random_error <- rnorm(  length(true_Y_linear), mean=0,sd=1) \n  \ntrue_Y_cont <- true_Y_linear + random_error\n  \n   \n  true_Y_prob <- exp(true_Y_linear)/(1+exp(true_Y_linear)) ## location param for logistic model\n  true_Y_bin <- apply(true_Y_prob, 1, function(x) rbinom(n =1, size =1, prob = x)) ## for logistic model, sampling Y\n  \n  \nsim_dat <-   data.frame(x = as.factor(x),\n             true_Y_cont = true_Y_cont,\n             true_Y_bin = true_Y_bin\n             )\n\noutcome_m <- glm(true_Y_bin ~ x, family = binomial(\"logit\"), data = sim_dat)\nsummary(outcome_m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = true_Y_bin ~ x, family = binomial(\"logit\"), data = sim_dat)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   0.6792     0.1447   4.694 2.67e-06 ***\nx2            1.0489     0.2541   4.128 3.65e-05 ***\nx3            1.7758     0.2087   8.509  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 834.94  on 999  degrees of freedom\nResidual deviance: 760.88  on 997  degrees of freedom\nAIC: 766.88\n\nNumber of Fisher Scoring iterations: 5\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n### Method 1\n\nChange the reference level:\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim_dat$x <- relevel(sim_dat$x, ref = \"2\")\n\noutcome_m2 <- glm(true_Y_bin ~ x, family = binomial(\"logit\"), data = sim_dat)\n\nsummary(outcome_m2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = true_Y_bin ~ x, family = binomial(\"logit\"), data = sim_dat)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   1.7280     0.2088   8.274  < 2e-16 ***\nx1           -1.0489     0.2541  -4.128 3.65e-05 ***\nx3            0.7269     0.2574   2.824  0.00474 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 834.94  on 999  degrees of freedom\nResidual deviance: 760.88  on 997  degrees of freedom\nAIC: 766.88\n\nNumber of Fisher Scoring iterations: 5\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n### Method 2\n\nAsk yourself the following questions:\n\n- what is the estimand/goal?\n\n$$\\beta_3 - \\beta_2$$\n\n- what is the estimator?\n\n$$\\hat\\beta_3 - \\hat \\beta_2$$\n\n- what is the distribution of MLE estimator?\n\n$\\hat\\beta_3$ and $\\hat \\beta_2$ follow normal distribution.  (one of the nice properties of MLE estimators)\n\nthen we can easily calculate the variance of $$\\hat\\beta_3 - \\hat \\beta_2$$ using some math.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncov_matrix <- vcov(outcome_m)\n\nvar2 <- cov_matrix[2,2]\nvar3 <- cov_matrix[3,3]\ncov_b23 <- cov_matrix[2,3]\n## refer to tutorial 4 for the calculation of var(A+B)\nvar_b3_minus_b2 <- var2 + var3  - 2*cov_b23\n\nvar_b3_minus_b2 %>% sqrt()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2573678\n```\n\n\n:::\n\n```{.r .cell-code}\nse <- var_b3_minus_b2 %>% sqrt()\n\nse\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2573678\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\nthe point estiamte is calculated as:\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npoint_est <- coef(outcome_m)[3]-coef(outcome_m)[2]\n```\n:::\n\n\n\n\n\n\n\n\nso we conclude that $\\hat\\beta_3 - \\hat \\beta_2$ follow a normal distribution with mean 0.7269048 and se 0.2573678\n\nFinaly question, what is the relationship between $\\hat\\beta_3 - \\hat \\beta_2$ and OR??\n\n$$log(OR) = \\hat\\beta_3 - \\hat \\beta_2$$\nYou can calculate the point estimate and confidence interval for the OR as well! Hooray!\n \n## Tutorial 6\n\nIn this and the following few tutorials, we will focus on survival analysis. \n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rms)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: Hmisc\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'Hmisc'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:dplyr':\n\n    src, summarize\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(survival)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'survival' was built under R version 4.3.2\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(mgus2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t1384 obs. of  11 variables:\n $ id    : num  1 2 3 4 5 6 7 8 9 10 ...\n $ age   : num  88 78 94 68 90 90 89 87 86 79 ...\n  ..- attr(*, \"label\")= chr \"AGE AT mgus_sp\"\n $ sex   : Factor w/ 2 levels \"F\",\"M\": 1 1 2 2 1 2 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Sex\"\n  ..- attr(*, \"format\")= chr \"$desex\"\n $ dxyr  : num  1981 1968 1980 1977 1973 ...\n $ hgb   : num  13.1 11.5 10.5 15.2 10.7 12.9 10.5 12.3 14.5 9.4 ...\n $ creat : num  1.3 1.2 1.5 1.2 0.8 1 0.9 1.2 0.9 1.1 ...\n $ mspike: num  0.5 2 2.6 1.2 1 0.5 1.3 1.6 2.4 2.3 ...\n  ..- attr(*, \"label\")= chr \"SEP SPIKE AT mgus_sp\"\n $ ptime : num  30 25 46 92 8 4 151 2 57 136 ...\n $ pstat : num  0 0 0 0 0 0 0 0 0 0 ...\n $ futime: num  30 25 46 92 8 4 151 2 57 136 ...\n $ death : num  1 1 1 1 1 1 1 1 0 1 ...\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit1 <- npsurv(Surv(futime,death)~sex,data=mgus2)\nlibrary(dplyr)\ntmp1 <- summary(fit1) %>% head(5) %>% unlist()\ntmp <- summary(fit1)\n\nkm_dat <- data.frame(time = tmp$time,\n                       risk = tmp$n.risk,\n                     death = tmp$n.event) %>%\n  mutate(surv_i = 1- death/risk)\n\n\n\nsurvplot(fit1,n.risk=TRUE)\n```\n\n::: {.cell-output-display}\n![](Tut6_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(fit1.mh <- survdiff(Surv(futime, death) ~ sex, data = mgus2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\nsurvdiff(formula = Surv(futime, death) ~ sex, data = mgus2)\n\n        N Observed Expected (O-E)^2/E (O-E)^2/V\nsex=F 631      423      471      4.88      9.67\nsex=M 753      540      492      4.67      9.67\n\n Chisq= 9.7  on 1 degrees of freedom, p= 0.002 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit1,times=12) # time is in months\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall: npsurv(formula = Surv(futime, death) ~ sex, data = mgus2)\n\n                sex=F \n        time       n.risk      n.event     survival      std.err lower 95% CI \n     12.0000     569.0000      61.0000       0.9032       0.0118       0.8804 \nupper 95% CI \n      0.9266 \n\n                sex=M \n        time       n.risk      n.event     survival      std.err lower 95% CI \n      12.000      646.000      112.000        0.851        0.013        0.826 \nupper 95% CI \n       0.877 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## risk difference at year 1\nRD <- 0.9032- 0.851\nRD + 1.96*sqrt(0.0118^2 +0.013^2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.08661126\n```\n\n\n:::\n\n```{.r .cell-code}\nRD - 1.96*sqrt(0.0118^2 +0.013^2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01778874\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\nwe know that logHR follows a normal distribution. So the confidence interval for HR could be calculated as:\n\n$$exp(logHR ± 1.96 \\cdot se_{logHR}) = exp(logHR)\\cdot exp(± 1.96 \\cdot se_{logHR}) = HR \\cdot exp(± 1.96 \\cdot se_{logHR}) $$\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## HR\n## HR <- (obs1/exp1)/(obs2/exp2)\nHR <- (423/471)/(540/492)\n\nHR\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.818259\n```\n\n\n:::\n\n```{.r .cell-code}\n## variance_logHR <- (1/exp1) + (1/exp2)\nse_logHR <- sqrt( (1/471) +(1/492) )\n\n\n## lower bound\nHR *exp(-1.96*se_logHR)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7211367\n```\n\n\n:::\n\n```{.r .cell-code}\n## 95% CI\n## upper bound\nHR *exp(1.96*se_logHR)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9284618\n```\n\n\n:::\n:::\n",
    "supporting": [
      "Tut6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}