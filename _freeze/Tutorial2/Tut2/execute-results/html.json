{
  "hash": "c30d4ab17804c9810c0be1728794eee5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Model Validation\"\nauthor: \"Lin Yu\"\ndate: \"2025-01-27\"\nformat: \n  html: \n    toc: true\n    embed-resources: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(DT)\nlibrary(here)\n```\n:::\n\n\n\n\n\n\n\n## Recap of tutorial 1\n\nUnderstand `random variable` through the following simulation: \n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_sample <- 1000\nbeta0 <-  0.5\nbeta1 <- 2\nx <- rnorm(n_sample,mean = 5, sd = 10)\n\nrandom_error <- rnorm(n_sample,mean = 0, sd = 5)\n\ny <- beta0 + beta1*x + random_error\n\npop_dat <- data.frame(y = y,\n           x = x)\n\npop_dat %>% \n  ggplot(aes(x = x, y = y))+\n  geom_point()+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](Tut2_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\nobserved **standard deviation of the data**:\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npop_dat %>% \n  ggplot(aes(y))+\n  geom_histogram()+\n  theme_bw()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Tut2_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsd(pop_dat$y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 20.08596\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_size <- 100\nsample_dat <- pop_dat[sample(c(1:sample_size),replace = FALSE),]\n\nsample_dat %>% datatable()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-57c8358abb001725d836\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-57c8358abb001725d836\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"88\",\"23\",\"46\",\"43\",\"32\",\"5\",\"53\",\"20\",\"54\",\"35\",\"10\",\"4\",\"92\",\"31\",\"84\",\"99\",\"79\",\"39\",\"63\",\"33\",\"42\",\"44\",\"28\",\"15\",\"6\",\"60\",\"2\",\"97\",\"70\",\"58\",\"1\",\"22\",\"13\",\"36\",\"49\",\"27\",\"93\",\"16\",\"73\",\"24\",\"86\",\"11\",\"57\",\"8\",\"68\",\"61\",\"65\",\"74\",\"7\",\"14\",\"62\",\"48\",\"17\",\"94\",\"66\",\"95\",\"56\",\"91\",\"51\",\"77\",\"71\",\"80\",\"96\",\"25\",\"40\",\"18\",\"85\",\"41\",\"82\",\"81\",\"21\",\"47\",\"52\",\"83\",\"34\",\"38\",\"98\",\"29\",\"59\",\"100\",\"30\",\"76\",\"55\",\"87\",\"45\",\"72\",\"69\",\"50\",\"75\",\"89\",\"78\",\"64\",\"3\",\"9\",\"37\",\"12\",\"90\",\"67\",\"19\",\"26\"],[-2.011637509783757,27.82885722146507,-21.96484754701793,-22.22577736546193,15.07787604708484,-13.96531275699394,3.554537694048206,-19.3825938459388,16.73615529803379,11.2788766425363,42.80318066747837,-31.07857361673509,11.78513601873411,22.50039893208056,-9.300214969039727,26.19500161587753,38.90619058442254,6.970008441634372,-0.1383885860589462,-11.0899272735646,-1.511888503343091,-30.28788543111187,-30.63153475627259,5.879491556050554,-6.764789841005578,-0.8699915421831506,66.0711987215919,19.86658044156768,44.29912815139995,9.612596318160092,38.01732192526251,21.86351259537279,-9.881076126687486,-5.244030308161227,-19.43073783398828,26.09845590837597,17.90907038182558,3.315687332884545,3.146761587899586,-7.890151063576308,32.33648623400864,35.61571995016251,10.86334276280586,-12.01777687761076,42.1630537346207,34.52782522466057,41.06346840778357,1.823798944065458,29.81877542966586,12.87962451886084,11.04738551095054,1.528428476188743,26.45130146761814,41.02729891680152,-0.4241250355898583,29.95247841345494,0.6721613931021775,35.13610949237439,-6.636429870064962,19.40955636622697,0.6343381418982803,26.53406421496083,-14.69853590955928,-7.903905043060393,-45.94542084519523,25.18016491237879,27.73081435927398,-27.49633257893702,11.81116537340984,-4.537968823096601,-11.3919807704433,-0.9542522805129818,33.64067583185203,-15.72434719464897,-21.64679264067672,-4.84329786404988,15.32589588699709,0.6266868695649985,26.69872728262135,0.9254560257709379,-12.22540773336974,35.95526878247783,11.63241610596145,15.51736076647786,-2.247474575170363,34.46241370331715,32.84542147689906,7.805733813126582,-4.890309937106641,14.2982954309407,25.37426919743818,18.19578627839567,3.769309812745151,2.495088374590321,-30.47537366045749,9.923849859464461,14.68059976147629,24.82859784725899,21.46231049413863,-1.191641890798323],[4.192192091856088,12.25140029005258,-8.265097286345341,-13.58645390833372,7.684151093722747,-8.489835430622898,3.666692540610117,-10.16793086292009,8.582551941987775,5.016294201121697,23.69328479901978,-14.56020274552602,7.123927344046721,11.02188648336019,-3.673978863856608,11.12959110169005,22.78027417871593,3.355033123463106,-2.475673708341297,-1.330721175792866,-3.811257930185823,-15.11119222434625,-12.78103967726915,3.70283351211303,-2.638992703975837,-3.489017954460031,34.39156383948099,9.265822199877551,21.66691541700328,6.732782516099608,17.14568501633231,7.888662803512104,-1.790350207978766,-1.46606001390945,-8.142681091777357,10.99870858295475,11.91739848179471,0.2483506235587924,1.451179149391846,-3.254774043008009,11.43709766721367,18.2800785231015,3.534139070443471,-5.420940042780352,22.24571872247057,24.49664884659456,17.43498928513053,-2.667160668567382,16.47144325313397,5.177009327517976,3.009549788007462,3.480954850596443,16.42783900530758,18.68331285396106,-4.32094660185002,14.86033986471107,3.324640845671426,19.63654450537436,1.93528626995905,9.573474991026536,-1.960086904448898,13.25771715299654,-5.888215748675291,-2.700151628864629,-24.16974639048447,11.24763337318253,13.61196021345519,-9.955800943704872,7.98069092644014,-5.12485291626361,-6.331221161887253,-1.221954747790695,14.8584671329007,-10.04451654595722,-9.406543244811633,-0.1412131377056172,5.680067629580418,-0.5257448168120753,15.38670592808695,-2.579819826731473,-8.484910400093931,17.86903772866022,5.010662040569798,9.479354882779226,-0.6363678521298501,16.09471411238472,17.13322087912178,7.556252987716746,-5.024444743818172,4.94670266128659,6.629257642076558,5.858379945036161,1.637824895830373,-0.05482560340396514,-13.34873705239109,7.357365042954454,1.68612395395889,13.37714691762961,10.57677802592376,2.841014428678793]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>y<\\/th>\\n      <th>x<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"y\",\"targets\":1},{\"name\":\"x\",\"targets\":2}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\nsample_dat %>% \n  ggplot(aes(x = x, y = y))+\n  geom_point()+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](Tut2_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\nthe standard deviation of the estimator ($\\hat\\beta$):\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglm_m <- glm(y~x, data= sample_dat)\n\nset.seed(1017)\n## lapply parallel computing: more effecient than a for loop:)\n\ncoef_dat <- lapply(1:100, function(i){\n  sample_dat <- pop_dat[sample(100,replace = FALSE),]\n  glm_m <- glm(y~x, data= sample_dat)\n  coef(glm_m)[2]\n})\n\ncoef_dat %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n      x \n1.94098 \n\n[[2]]\n      x \n1.94098 \n\n[[3]]\n      x \n1.94098 \n\n[[4]]\n      x \n1.94098 \n\n[[5]]\n      x \n1.94098 \n\n[[6]]\n      x \n1.94098 \n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(1017) \nbeta_hat_dat <- lapply(1:100, function(i) {\n  sample_dat <- pop_dat[sample(seq_len(nrow(pop_dat)), ## sample from 1: n_sample \n                               sample_size, ## sample size\n                               replace = FALSE), ]\n  glm_m <- glm(y ~ x, data = sample_dat)\n  coef(glm_m)[2]\n}) %>% unlist()\n\nbeta_hat_dat %>%\n  data.frame() %>% \n  ggplot(aes(.)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Tut2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbeta_hat <- NULL\nfor(sample_size in c(20,100,200,500,1000)){\n  beta_hat_tmp <- lapply(1:100, function(i) {\n  sample_dat <- pop_dat[sample(seq_len(nrow(pop_dat)), ## sample from 1: n_sample \n                               sample_size, ## sample size\n                               replace = FALSE), ]\n  glm_m <- glm(y ~ x, data = sample_dat)\n  coef(glm_m)[2]\n}) %>% unlist() \n  beta_hat <- cbind(beta_hat,beta_hat_tmp )\n}\n\nbeta_hat <- beta_hat %>% data.frame()\n\ncolnames(beta_hat) <- paste0(\"sample size = \",c(20,100,200,500,1000))\n\nbeta_hat %>% \n  datatable()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-d65cdd704d0ee8e07330\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d65cdd704d0ee8e07330\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"x\",\"x.1\",\"x.2\",\"x.3\",\"x.4\",\"x.5\",\"x.6\",\"x.7\",\"x.8\",\"x.9\",\"x.10\",\"x.11\",\"x.12\",\"x.13\",\"x.14\",\"x.15\",\"x.16\",\"x.17\",\"x.18\",\"x.19\",\"x.20\",\"x.21\",\"x.22\",\"x.23\",\"x.24\",\"x.25\",\"x.26\",\"x.27\",\"x.28\",\"x.29\",\"x.30\",\"x.31\",\"x.32\",\"x.33\",\"x.34\",\"x.35\",\"x.36\",\"x.37\",\"x.38\",\"x.39\",\"x.40\",\"x.41\",\"x.42\",\"x.43\",\"x.44\",\"x.45\",\"x.46\",\"x.47\",\"x.48\",\"x.49\",\"x.50\",\"x.51\",\"x.52\",\"x.53\",\"x.54\",\"x.55\",\"x.56\",\"x.57\",\"x.58\",\"x.59\",\"x.60\",\"x.61\",\"x.62\",\"x.63\",\"x.64\",\"x.65\",\"x.66\",\"x.67\",\"x.68\",\"x.69\",\"x.70\",\"x.71\",\"x.72\",\"x.73\",\"x.74\",\"x.75\",\"x.76\",\"x.77\",\"x.78\",\"x.79\",\"x.80\",\"x.81\",\"x.82\",\"x.83\",\"x.84\",\"x.85\",\"x.86\",\"x.87\",\"x.88\",\"x.89\",\"x.90\",\"x.91\",\"x.92\",\"x.93\",\"x.94\",\"x.95\",\"x.96\",\"x.97\",\"x.98\",\"x.99\"],[1.836737327988494,1.752536725587348,1.993839859087744,1.967401714881617,2.083866376033392,2.184532955478602,1.753495717293485,1.949984782623517,1.604144399554682,2.153013342065939,2.032074378536956,1.835853719219096,2.229870477463425,2.000080144435469,1.909902902781315,2.003428504715842,1.895689318427052,2.018008594200043,2.018875382144878,2.075017820756194,1.794884598067398,1.85471397770473,1.740457294653931,2.046855588034667,1.802437338451617,1.904437166613279,2.026975411694648,2.03329581485764,1.743820300171185,1.81384711410215,1.972624797590045,2.167835397182723,1.953877818377513,1.807704498245656,2.13123716257696,1.871720469712749,1.974280560056591,2.274386289871685,2.050618140764328,1.92729545401396,1.615213882228874,1.998106459670244,1.835865586390223,1.899577855379229,1.910123296870394,1.93586786401025,1.998329378873926,2.045804121322794,1.868942588319339,1.82244553810523,1.93549571466477,1.980321000393358,1.99312936390694,1.965146577514329,2.099851181888056,2.129327182666574,1.943028340523308,1.958346673115933,1.98449062461698,1.848472525318045,2.035756343277706,1.97773977018099,2.196568617123627,2.144308897849512,2.092585891411487,1.773283124275763,1.905988013802627,2.031892144115661,1.857280831324742,1.905076010797567,1.947274789320955,1.881381796602447,2.003575601601987,2.022804510725363,1.861255002355017,1.863836520977875,2.274497886306924,2.176451901518366,1.95780054696673,1.908111498924153,1.934578601692279,1.877099866742925,1.804714724276021,1.822444566893537,2.187537459792666,1.906851472994829,1.968957933948259,1.767661572315731,2.020608874204433,1.902025030872765,1.997529269673924,1.976605668660889,1.93551283369419,2.140857365645774,1.771313145139169,1.938190289280059,1.864081654980185,1.758975588617418,1.81128307957532,1.844139175371472],[2.071061666608694,1.967792040316712,1.980563646177554,1.933989951125831,1.98560916062994,1.916747568642757,1.890387700881497,2.003106108600069,2.001674393353264,1.941410688036427,1.970792672588709,1.975685533786382,1.9491998961607,1.917049478883855,1.962353596175356,2.019661967358596,1.937511927403967,1.994938335672458,1.97202570911235,1.983728821842435,1.961169036925191,1.948462556037471,1.923228238296597,2.137185220275188,1.894743878678244,1.939405044208182,1.952465935685042,1.98026895706802,1.964527920125604,1.927245270511195,1.972207590250285,1.950794401519132,2.006302869558834,1.929417534845288,2.023795729658432,1.964981666457176,1.928002661606206,1.986911534745631,1.974771123030108,2.024383689403704,1.992326709003833,1.956290784547746,1.965586512115097,1.977710314178385,1.920700626583611,1.971214215581687,1.855242314463847,1.974135687310617,1.920369667352276,1.972375778257349,1.964428060339256,1.887237653143355,1.920565414612533,1.891386799045687,1.884363060002266,1.999098856378537,1.961028461227709,1.96767564642003,2.026086667816204,1.945923987446404,1.966155987908899,1.895812542412623,1.935663352497293,2.02914170129289,1.938103765992201,1.969019692157016,1.966915531601677,1.908798109853246,1.926490631498034,2.014304834900092,2.017333035340479,1.888570459055802,1.887182389697553,1.928826590547752,1.991433066743542,1.990650086849128,2.001889271104802,1.970279648996665,1.962839074605161,1.954732992368367,1.95903794760181,1.919164227834378,1.985330997873786,2.042755239943091,1.898813738231525,1.953608348532032,1.950927595319921,1.955920333661988,1.965317738691708,1.858996116828777,2.078074592196713,1.97091580500136,1.951180682704518,1.957571810791401,1.954279783755734,1.958399041062425,1.938126376807609,1.972956846710612,2.055176716888161,1.947363962926459],[1.973464475199806,1.976149298871033,1.979226135682477,1.972906258610661,1.981272464071248,1.970731512011397,1.938812801480935,1.978760429401587,1.896907878721565,1.919650494189788,1.931593260249807,1.970520758292165,1.955626910457213,1.959526156185287,2.036827643379268,1.989907172434249,1.990057876212252,2.031620210350624,1.995434804068672,1.947541598403784,1.965163671034575,1.961070993783504,2.022765031345015,1.929790404313556,1.971947176363084,1.912706512410549,1.96167491563612,1.88467591979298,1.951741069084358,1.925750031518256,1.978721505959451,1.9440479050514,1.974737154450199,1.949938150943429,1.98737811825727,1.953940298096115,2.007189144096112,2.009110148801832,1.913629302766804,1.990975574257629,1.990120876259386,1.947806113564267,1.998059506711983,1.862528101400078,1.933873596659659,1.972641607715409,1.977648065775191,1.987327505965571,1.930642872460887,1.961145455669995,1.987552758862386,1.954629526178055,2.023396953411268,1.976895839292721,1.951003367186832,1.977666407725062,2.032001944911254,2.018417866160738,1.929105788806508,1.926616886199839,1.92956036767897,1.985576149386581,1.963991109424139,1.89773781096101,1.925884508485972,1.973369148535793,1.992095580767779,1.996404231579267,1.956378252514882,1.962751588463917,2.001021190331143,2.004942234404626,1.960099898134997,1.98862808883964,2.018610543477531,1.988960159666116,1.941118135308154,1.946388447692324,1.963676415889432,1.937677058870863,1.928472065367415,1.944140222624364,1.93706783913814,1.979954806149812,1.998429507103817,1.954506847271793,1.95778656503659,2.008749082245458,1.952517773160829,1.995577653514887,1.966299466403067,2.008466535892707,1.982988740106226,1.958918552238648,1.967085750773606,1.988888241440578,2.026463252015165,1.97332500324871,1.980948153642601,1.92814245197153],[1.966778709843677,1.967826767145662,1.96401660784321,1.968363988360148,1.948667953053019,1.985467600658318,1.954663515439541,1.956804170099126,1.986555573297363,1.938276091045169,1.973574397749414,1.948427060487898,1.953564440045448,1.963134184656375,1.974300771081757,1.962868621966533,1.977585962360501,1.978855592731463,1.962831476839408,1.984589060046614,1.965590119964306,1.963002906469035,1.965994557303946,1.973784308839535,1.955915225562373,1.959312105929046,1.968706781017268,1.971342012616295,1.965083831801065,1.945617029683471,1.964935926458877,1.975646147540651,1.969277087308907,1.983997699860595,1.998123364857738,1.982736149060695,1.977389864662912,1.965514631378557,1.969024800715325,1.989424328921584,1.978444919920171,1.9691614513388,1.96294005261539,1.968138495790016,1.963340226486594,1.959475872638808,1.987407440375177,1.971331856395326,1.986199854171658,1.993755247849068,1.970092353340063,1.975050686979842,1.966492063516266,1.975977807147406,1.989621176004943,1.946819729156537,1.947402636033252,1.93857988888307,1.974491872889408,1.968131685259452,1.945203600988387,1.953771574284457,1.968841593943908,1.967534962308815,1.950662661336205,1.986997451108926,1.971095068418844,2.002881227010961,1.961411408910113,1.965110167910293,1.941297786482868,1.967322961652442,1.972454684466034,1.956787182025569,1.952085075330351,1.956138655597234,1.964964184997786,1.986021762997578,1.949140545663282,1.975690295107315,1.986334105840547,1.987987237877687,1.965778327692242,1.957627760071315,1.977347058926559,1.967032888841347,1.958136864003166,1.971736915445135,1.92481242641732,1.953014867614491,1.964888991209271,1.955910662006563,1.943652861576222,1.980235913429228,1.964188390848068,1.961084678241681,1.998970868999649,1.983354625081435,1.96832989480999,1.945925980676729],[1.965795460611598,1.965795460611602,1.965795460611601,1.965795460611603,1.965795460611597,1.965795460611599,1.965795460611601,1.965795460611598,1.965795460611603,1.965795460611598,1.965795460611601,1.965795460611603,1.965795460611597,1.965795460611598,1.965795460611605,1.965795460611597,1.9657954606116,1.965795460611599,1.965795460611598,1.965795460611604,1.965795460611597,1.965795460611599,1.965795460611603,1.965795460611598,1.965795460611602,1.965795460611597,1.965795460611601,1.965795460611599,1.9657954606116,1.965795460611594,1.965795460611601,1.965795460611598,1.9657954606116,1.965795460611603,1.965795460611603,1.965795460611602,1.965795460611602,1.965795460611603,1.965795460611599,1.965795460611602,1.965795460611599,1.965795460611602,1.965795460611603,1.9657954606116,1.965795460611599,1.965795460611598,1.965795460611604,1.965795460611602,1.965795460611597,1.9657954606116,1.9657954606116,1.965795460611601,1.965795460611601,1.965795460611603,1.9657954606116,1.965795460611598,1.965795460611605,1.965795460611598,1.965795460611598,1.965795460611596,1.965795460611602,1.9657954606116,1.965795460611605,1.965795460611602,1.965795460611599,1.965795460611603,1.965795460611601,1.965795460611601,1.965795460611595,1.965795460611599,1.965795460611602,1.965795460611599,1.965795460611601,1.9657954606116,1.965795460611602,1.965795460611604,1.965795460611599,1.965795460611604,1.965795460611605,1.965795460611597,1.965795460611598,1.965795460611598,1.965795460611597,1.965795460611604,1.965795460611604,1.965795460611603,1.965795460611597,1.965795460611598,1.965795460611597,1.965795460611606,1.965795460611602,1.965795460611603,1.965795460611599,1.965795460611603,1.965795460611603,1.9657954606116,1.965795460611602,1.965795460611599,1.965795460611599,1.965795460611598]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>sample size = 20<\\/th>\\n      <th>sample size = 100<\\/th>\\n      <th>sample size = 200<\\/th>\\n      <th>sample size = 500<\\/th>\\n      <th>sample size = 1000<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"sample size = 20\",\"targets\":1},{\"name\":\"sample size = 100\",\"targets\":2},{\"name\":\"sample size = 200\",\"targets\":3},{\"name\":\"sample size = 500\",\"targets\":4},{\"name\":\"sample size = 1000\",\"targets\":5}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\napply(beta_hat,2, sd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  sample size = 20  sample size = 100  sample size = 200  sample size = 500 \n      1.331442e-01       4.579778e-02       3.317768e-02       1.444121e-02 \nsample size = 1000 \n      2.500723e-15 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\nviz the distribution of $\\hat \\beta$:\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'tidyr' was built under R version 4.3.2\n```\n\n\n:::\n\n```{.r .cell-code}\nplot_dat <- beta_hat %>% \n  pivot_longer(cols = everything(),\n    values_to = \"beta_hat\",\n    names_to = \"sample size\",\n    names_prefix = \"sample size =\"\n               ) \n  \n plot_dat <- plot_dat %>%  mutate(`sample size` = as.numeric(`sample size`))\n\nplot_dat$`sample size` <- factor(plot_dat$`sample size`, \n                                 levels = c(\"20\",\"100\", \"200\", \"500\", \"1000\"), \n                                 labels = c(\"20\",\"100\", \"200\", \"500\", \"1000\"))\n\n\n  plot_dat %>% \n    ggplot(aes(x = beta_hat,color = `sample size`, fill = `sample size`)) +\n    geom_histogram()+\n    facet_grid(cols = vars(`sample size`),scales = \"free_y\")+\n    theme_bw()+\n    theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Tut2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n## Tutorial 2: Model Validation\n\nUse the hwy2.RData file available from the course page. After attaching the rms package and doing the usual datadist()/options() task        \n1. Fit the following model\n\n```r\nfit <- ols(rate~rcs(trks,4)+rcs(sigs1,4)+type+hwy,data=hwy2,x=TRUE,y=TRUE)\n```\n\n2. run both the ordinary bootstrap validation and the .632 bootstrap validation on this model. compare the results.\n\n***\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list = ls())\nlibrary(rms)\nlibrary(dplyr)\n## change your working directory as necessary\nload(here(\"data\",\"hwy2.RData\"))\n\nstr(hwy2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t39 obs. of  13 variables:\n $ rate : num  4.58 2.86 3.02 2.29 1.61 6.87 3.85 6.12 3.29 5.88 ...\n $ len  : num  4.99 16.11 9.75 10.65 20.01 ...\n $ ADT  : int  69 73 49 61 28 30 46 25 43 23 ...\n $ trks : int  8 8 10 13 12 6 8 9 12 7 ...\n $ sigs1: num  0.2004 0.0621 0.1026 0.0939 0.05 ...\n $ slim : int  55 60 60 65 70 55 55 55 50 50 ...\n $ shld : int  10 10 10 10 10 10 8 10 4 5 ...\n $ lane : int  8 4 4 6 4 4 4 4 4 4 ...\n $ acpt : num  4.6 4.4 4.7 3.8 2.2 24.8 11 18.5 7.5 8.2 ...\n $ itg  : num  1.2 1.43 1.54 0.94 0.65 0.34 0.47 0.38 0.95 0.12 ...\n $ lwid : int  12 12 12 12 12 12 12 12 12 12 ...\n $ hwy  : Factor w/ 4 levels \"FAI\",\"MA\",\"MC\",..: 1 1 1 1 1 4 4 4 4 4 ...\n $ type : Factor w/ 2 levels \"regular\",\"major\": 2 2 2 2 2 2 2 2 2 2 ...\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n:::{.callout-note collapse=\"true\"}\n# How do you code factor/nominal variables?\n\nWhen working with factor/nominal/categorical variables in R, preprocessing is necessary to ensure the data is properly handled by statistical models and algorithms. Many R functions automatically perform dummy coding when a variable is specified as a factor, typically using the `as.factor()` function.\n\n_Side note: Dummy coding (sometimes confused with one-hot encoding in CS) is just one way to code factor variables. It is popular because of its ease of interpretation._ \n:::\n\n\n:::{.callout-note collapse=\"true\"}\n# Validate the model\n\nA complete process of model validation usually consists of two parts: **internal** and **external** validation. Ideally (when you’re lucky 😄), you will have two independent datasets, such as EHR data from two hospitals. You will first _build_ or ( _train_) and _validate_ your model internally using data from hospital A (the train-validation dataset). Then the model can be sent to hospital B for external validation (test set). If you do not have two datasets, you can manually divide the data into two parts, with one part mimicking the external dataset.       \n\n- Split-sample or split-sample averaged(SSA)\n\n- K-fold Cross-validation   \n\n- Bootstrap: ordinary, .632\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# sample size 100k\nset.seed(1017)\nn_sample <- 100000\npatient_id <- c(1:n_sample)\n\n# sample with replacement\nsample_dat <- sample(patient_id,size=n_sample,replace = TRUE) \n# proportion of samples selected in bootstrap sampling with replacement\n((sample_dat%>% unique() %>% length())/n_sample )%>% round(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.632\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n:::\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nh.dd <- datadist(hwy2)\noptions(datadist=\"h.dd\")\nfit <- ols(rate~rcs(trks,4)+\n             rcs(sigs1,4)+type+hwy,\n           data=hwy2,x=TRUE,y=TRUE)\nfit$x %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  trks      trks'    trks''      sigs1       sigs1'      sigs1'' type=major\n1    8 0.02777778 0.0000000 0.20040080 2.023540e-03 0.0004753511          1\n2    8 0.02777778 0.0000000 0.06207325 7.616807e-07 0.0000000000          1\n3   10 0.75000000 0.2222222 0.10256410 8.221905e-05 0.0000000000          1\n4   13 4.50000000 2.2222222 0.09389671 4.716474e-05 0.0000000000          1\n5   12 3.02777778 1.4074074 0.04997501 0.000000e+00 0.0000000000          1\n6    6 0.00000000 0.0000000 2.00750419 1.016433e+00 0.7779110205          1\n  hwy=MA hwy=MC hwy=PA\n1      0      0      0\n2      0      0      0\n3      0      0      0\n4      0      0      0\n5      0      0      0\n6      0      0      1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1017)\nvalidate(fit, B=100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nDivergence or singularity in 14 samples\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          index.orig training   test optimism index.corrected  n\nR-square      0.7110   0.7542 0.5195   0.2346          0.4764 86\nMSE           1.1106   0.8411 1.8466  -1.0055          2.1161 86\ng             1.8604   1.7997 1.6890   0.1107          1.7497 86\nIntercept     0.0000   0.0000 0.4525  -0.4525          0.4525 86\nSlope         1.0000   1.0000 0.8944   0.1056          0.8944 86\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1017)\nvalidate(fit,method = \".632\",B=100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nDivergence or singularity in 14 samples\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          index.orig training    test optimism index.corrected  n\nR-square      0.7110   0.7542 -0.0506   0.4814          0.2297 86\nMSE           1.1106   0.8411  2.8875  -1.1230          2.2336 86\ng             1.8604   1.7997  1.1931   0.4217          1.4386 86\nIntercept     0.0000   0.0000  0.9201  -0.5815          0.5815 86\nSlope         1.0000   1.0000  0.6309   0.2332          0.7668 86\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\nBootstrapping with replacement leads to some data points being repeated in the bootstrap sample. As a result, the model may end up 'memorizing' these repeated points, which can cause it to perform better.\n",
    "supporting": [
      "Tut2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}